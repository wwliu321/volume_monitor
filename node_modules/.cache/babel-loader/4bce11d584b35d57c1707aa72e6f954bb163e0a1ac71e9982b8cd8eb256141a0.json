{"ast":null,"code":"export class AlertManager {\n  constructor(options) {\n    this.options = void 0;\n    this.lastAlertTime = 0;\n    this.options = {\n      textEnabled: options.textEnabled,\n      soundEnabled: options.soundEnabled,\n      minInterval: options.minInterval || 15000,\n      threshold: options.threshold || 30,\n      lowVolumeDuration: options.lowVolumeDuration || 3000\n    };\n  }\n  updateConfig(newOptions) {\n    this.options = {\n      ...this.options,\n      ...newOptions\n    };\n  }\n  trigger(type) {\n    const now = Date.now();\n    if (now - this.lastAlertTime < (this.options.minInterval || 15000)) {\n      return;\n    }\n    switch (type) {\n      case 'visual':\n        this.showVisualAlert();\n        break;\n      case 'text':\n        if (this.options.textEnabled) {\n          this.showTextAlert();\n        }\n        break;\n      case 'sound':\n        if (this.options.soundEnabled) {\n          this.playSound();\n        }\n        break;\n      case 'all':\n        this.showVisualAlert();\n        if (this.options.textEnabled) this.showTextAlert();\n        if (this.options.soundEnabled) this.playSound();\n        break;\n      case 'low-volume':\n        this.handleLowVolume();\n        break;\n    }\n    this.lastAlertTime = now;\n  }\n  showVisualAlert() {\n    console.log('Visual alert triggered');\n  }\n  showTextAlert() {\n    console.log('Text alert triggered');\n  }\n  playSound() {\n    console.log('Sound alert triggered');\n  }\n  handleLowVolume() {\n    this.trigger('all');\n  }\n}\nexport const alertManager = new AlertManager({\n  textEnabled: true,\n  soundEnabled: true,\n  minInterval: 15000,\n  threshold: 30,\n  lowVolumeDuration: 3000\n});","map":{"version":3,"names":["AlertManager","constructor","options","lastAlertTime","textEnabled","soundEnabled","minInterval","threshold","lowVolumeDuration","updateConfig","newOptions","trigger","type","now","Date","showVisualAlert","showTextAlert","playSound","handleLowVolume","console","log","alertManager"],"sources":["D:/projects/volume-monitor/src/utils/alertManager.ts"],"sourcesContent":["import { alertSound } from './alertSound';\r\n\r\nexport interface AlertOptions {\r\n  textEnabled: boolean;\r\n  soundEnabled: boolean;\r\n  minInterval?: number;\r\n  silentPeriod?: number;\r\n  threshold?: number;\r\n  lowVolumeDuration?: number;\r\n}\r\n\r\nexport type AlertType = 'visual' | 'text' | 'sound' | 'all' | 'low-volume';\r\n\r\nexport interface IAlertManager {\r\n  updateConfig(newOptions: Partial<AlertOptions>): void;\r\n  trigger(type: AlertType): void;\r\n}\r\n\r\nexport class AlertManager implements IAlertManager {\r\n  private options: AlertOptions;\r\n  private lastAlertTime: number = 0;\r\n\r\n  constructor(options: AlertOptions) {\r\n    this.options = {\r\n      textEnabled: options.textEnabled,\r\n      soundEnabled: options.soundEnabled,\r\n      minInterval: options.minInterval || 15000,\r\n      threshold: options.threshold || 30,\r\n      lowVolumeDuration: options.lowVolumeDuration || 3000\r\n    };\r\n  }\r\n\r\n  public updateConfig(newOptions: Partial<AlertOptions>): void {\r\n    this.options = {\r\n      ...this.options,\r\n      ...newOptions\r\n    };\r\n  }\r\n\r\n  public trigger(type: AlertType): void {\r\n    const now = Date.now();\r\n    if (now - this.lastAlertTime < (this.options.minInterval || 15000)) {\r\n      return;\r\n    }\r\n\r\n    switch (type) {\r\n      case 'visual':\r\n        this.showVisualAlert();\r\n        break;\r\n      case 'text':\r\n        if (this.options.textEnabled) {\r\n          this.showTextAlert();\r\n        }\r\n        break;\r\n      case 'sound':\r\n        if (this.options.soundEnabled) {\r\n          this.playSound();\r\n        }\r\n        break;\r\n      case 'all':\r\n        this.showVisualAlert();\r\n        if (this.options.textEnabled) this.showTextAlert();\r\n        if (this.options.soundEnabled) this.playSound();\r\n        break;\r\n      case 'low-volume':\r\n        this.handleLowVolume();\r\n        break;\r\n    }\r\n\r\n    this.lastAlertTime = now;\r\n  }\r\n\r\n  private showVisualAlert(): void {\r\n    console.log('Visual alert triggered');\r\n  }\r\n\r\n  private showTextAlert(): void {\r\n    console.log('Text alert triggered');\r\n  }\r\n\r\n  private playSound(): void {\r\n    console.log('Sound alert triggered');\r\n  }\r\n\r\n  private handleLowVolume(): void {\r\n    this.trigger('all');\r\n  }\r\n}\r\n\r\nexport const alertManager = new AlertManager({\r\n  textEnabled: true,\r\n  soundEnabled: true,\r\n  minInterval: 15000,\r\n  threshold: 30,\r\n  lowVolumeDuration: 3000\r\n}) as IAlertManager; "],"mappings":"AAkBA,OAAO,MAAMA,YAAY,CAA0B;EAIjDC,WAAWA,CAACC,OAAqB,EAAE;IAAA,KAH3BA,OAAO;IAAA,KACPC,aAAa,GAAW,CAAC;IAG/B,IAAI,CAACD,OAAO,GAAG;MACbE,WAAW,EAAEF,OAAO,CAACE,WAAW;MAChCC,YAAY,EAAEH,OAAO,CAACG,YAAY;MAClCC,WAAW,EAAEJ,OAAO,CAACI,WAAW,IAAI,KAAK;MACzCC,SAAS,EAAEL,OAAO,CAACK,SAAS,IAAI,EAAE;MAClCC,iBAAiB,EAAEN,OAAO,CAACM,iBAAiB,IAAI;IAClD,CAAC;EACH;EAEOC,YAAYA,CAACC,UAAiC,EAAQ;IAC3D,IAAI,CAACR,OAAO,GAAG;MACb,GAAG,IAAI,CAACA,OAAO;MACf,GAAGQ;IACL,CAAC;EACH;EAEOC,OAAOA,CAACC,IAAe,EAAQ;IACpC,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC;IACtB,IAAIA,GAAG,GAAG,IAAI,CAACV,aAAa,IAAI,IAAI,CAACD,OAAO,CAACI,WAAW,IAAI,KAAK,CAAC,EAAE;MAClE;IACF;IAEA,QAAQM,IAAI;MACV,KAAK,QAAQ;QACX,IAAI,CAACG,eAAe,CAAC,CAAC;QACtB;MACF,KAAK,MAAM;QACT,IAAI,IAAI,CAACb,OAAO,CAACE,WAAW,EAAE;UAC5B,IAAI,CAACY,aAAa,CAAC,CAAC;QACtB;QACA;MACF,KAAK,OAAO;QACV,IAAI,IAAI,CAACd,OAAO,CAACG,YAAY,EAAE;UAC7B,IAAI,CAACY,SAAS,CAAC,CAAC;QAClB;QACA;MACF,KAAK,KAAK;QACR,IAAI,CAACF,eAAe,CAAC,CAAC;QACtB,IAAI,IAAI,CAACb,OAAO,CAACE,WAAW,EAAE,IAAI,CAACY,aAAa,CAAC,CAAC;QAClD,IAAI,IAAI,CAACd,OAAO,CAACG,YAAY,EAAE,IAAI,CAACY,SAAS,CAAC,CAAC;QAC/C;MACF,KAAK,YAAY;QACf,IAAI,CAACC,eAAe,CAAC,CAAC;QACtB;IACJ;IAEA,IAAI,CAACf,aAAa,GAAGU,GAAG;EAC1B;EAEQE,eAAeA,CAAA,EAAS;IAC9BI,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACvC;EAEQJ,aAAaA,CAAA,EAAS;IAC5BG,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACrC;EAEQH,SAASA,CAAA,EAAS;IACxBE,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACtC;EAEQF,eAAeA,CAAA,EAAS;IAC9B,IAAI,CAACP,OAAO,CAAC,KAAK,CAAC;EACrB;AACF;AAEA,OAAO,MAAMU,YAAY,GAAG,IAAIrB,YAAY,CAAC;EAC3CI,WAAW,EAAE,IAAI;EACjBC,YAAY,EAAE,IAAI;EAClBC,WAAW,EAAE,KAAK;EAClBC,SAAS,EAAE,EAAE;EACbC,iBAAiB,EAAE;AACrB,CAAC,CAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}