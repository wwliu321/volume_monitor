{"ast":null,"code":"class VolumeAnalyzer {\n  constructor() {\n    this.SAMPLE_WINDOW = 100;\n    // 保存最近100个样本\n    this.samples = [];\n    this.lastAnalysis = null;\n  }\n  addSample(volume, threshold) {\n    const now = Date.now();\n    this.samples.push(volume);\n\n    // 保持样本窗口大小\n    if (this.samples.length > this.SAMPLE_WINDOW) {\n      this.samples.shift();\n    }\n    const currentStats = this.calculateStats();\n    const trend = this.analyzeTrend();\n    const recommendation = this.generateRecommendation(currentStats, threshold);\n    this.lastAnalysis = {\n      currentStats,\n      trend,\n      recommendation\n    };\n    return this.lastAnalysis;\n  }\n  calculateStats() {\n    const values = this.samples;\n    return {\n      average: values.reduce((a, b) => a + b, 0) / values.length,\n      min: Math.min(...values),\n      max: Math.max(...values),\n      samples: [...values],\n      timestamp: Date.now()\n    };\n  }\n  analyzeTrend() {\n    if (this.samples.length < 10) return 'stable';\n    const recentSamples = this.samples.slice(-10);\n    const firstHalf = recentSamples.slice(0, 5);\n    const secondHalf = recentSamples.slice(-5);\n    const firstAvg = firstHalf.reduce((a, b) => a + b, 0) / 5;\n    const secondAvg = secondHalf.reduce((a, b) => a + b, 0) / 5;\n    const difference = secondAvg - firstAvg;\n    if (difference > 5) return 'rising';\n    if (difference < -5) return 'falling';\n    return 'stable';\n  }\n  generateRecommendation(stats, threshold) {\n    const {\n      average,\n      max,\n      min\n    } = stats;\n    if (average < threshold) {\n      if (max < threshold) {\n        return '您的说话音量持续偏低，建议提高音量';\n      }\n      return '说话音量不够稳定，请保持适当音量';\n    }\n    if (max - min > 50) {\n      return '音量波动较大，建议保持稳定的说话音量';\n    }\n    if (average > threshold * 2) {\n      return '当前音量可能过高，建议适当降低';\n    }\n    return null;\n  }\n  getLastAnalysis() {\n    return this.lastAnalysis;\n  }\n  reset() {\n    this.samples = [];\n    this.lastAnalysis = null;\n  }\n}\nexport const volumeAnalyzer = new VolumeAnalyzer();","map":{"version":3,"names":["VolumeAnalyzer","constructor","SAMPLE_WINDOW","samples","lastAnalysis","addSample","volume","threshold","now","Date","push","length","shift","currentStats","calculateStats","trend","analyzeTrend","recommendation","generateRecommendation","values","average","reduce","a","b","min","Math","max","timestamp","recentSamples","slice","firstHalf","secondHalf","firstAvg","secondAvg","difference","stats","getLastAnalysis","reset","volumeAnalyzer"],"sources":["D:/projects/volume-monitor/src/utils/volumeAnalyzer.ts"],"sourcesContent":["interface VolumeStats {\r\n  average: number;\r\n  min: number;\r\n  max: number;\r\n  samples: number[];\r\n  timestamp: number;\r\n}\r\n\r\ninterface AnalysisResult {\r\n  currentStats: VolumeStats;\r\n  trend: 'rising' | 'falling' | 'stable';\r\n  recommendation: string | null;\r\n}\r\n\r\nclass VolumeAnalyzer {\r\n  private readonly SAMPLE_WINDOW = 100; // 保存最近100个样本\r\n  private samples: number[] = [];\r\n  private lastAnalysis: AnalysisResult | null = null;\r\n\r\n  public addSample(volume: number, threshold: number): AnalysisResult {\r\n    const now = Date.now();\r\n    this.samples.push(volume);\r\n    \r\n    // 保持样本窗口大小\r\n    if (this.samples.length > this.SAMPLE_WINDOW) {\r\n      this.samples.shift();\r\n    }\r\n\r\n    const currentStats = this.calculateStats();\r\n    const trend = this.analyzeTrend();\r\n    const recommendation = this.generateRecommendation(currentStats, threshold);\r\n\r\n    this.lastAnalysis = {\r\n      currentStats,\r\n      trend,\r\n      recommendation\r\n    };\r\n\r\n    return this.lastAnalysis;\r\n  }\r\n\r\n  private calculateStats(): VolumeStats {\r\n    const values = this.samples;\r\n    return {\r\n      average: values.reduce((a, b) => a + b, 0) / values.length,\r\n      min: Math.min(...values),\r\n      max: Math.max(...values),\r\n      samples: [...values],\r\n      timestamp: Date.now()\r\n    };\r\n  }\r\n\r\n  private analyzeTrend(): 'rising' | 'falling' | 'stable' {\r\n    if (this.samples.length < 10) return 'stable';\r\n\r\n    const recentSamples = this.samples.slice(-10);\r\n    const firstHalf = recentSamples.slice(0, 5);\r\n    const secondHalf = recentSamples.slice(-5);\r\n\r\n    const firstAvg = firstHalf.reduce((a, b) => a + b, 0) / 5;\r\n    const secondAvg = secondHalf.reduce((a, b) => a + b, 0) / 5;\r\n\r\n    const difference = secondAvg - firstAvg;\r\n    if (difference > 5) return 'rising';\r\n    if (difference < -5) return 'falling';\r\n    return 'stable';\r\n  }\r\n\r\n  private generateRecommendation(stats: VolumeStats, threshold: number): string | null {\r\n    const { average, max, min } = stats;\r\n\r\n    if (average < threshold) {\r\n      if (max < threshold) {\r\n        return '您的说话音量持续偏低，建议提高音量';\r\n      }\r\n      return '说话音量不够稳定，请保持适当音量';\r\n    }\r\n\r\n    if (max - min > 50) {\r\n      return '音量波动较大，建议保持稳定的说话音量';\r\n    }\r\n\r\n    if (average > threshold * 2) {\r\n      return '当前音量可能过高，建议适当降低';\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public getLastAnalysis(): AnalysisResult | null {\r\n    return this.lastAnalysis;\r\n  }\r\n\r\n  public reset(): void {\r\n    this.samples = [];\r\n    this.lastAnalysis = null;\r\n  }\r\n}\r\n\r\nexport const volumeAnalyzer = new VolumeAnalyzer(); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}