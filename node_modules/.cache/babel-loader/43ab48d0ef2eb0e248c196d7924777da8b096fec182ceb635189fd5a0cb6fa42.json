{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\volume-monitor\\\\src\\\\components\\\\AudioTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useAudioMonitor } from '../hooks/useAudioMonitor';\nimport { AlertNotification } from './AlertNotification';\nimport { VolumeVisualizer } from './VolumeVisualizer';\nimport { VolumeAnalysis } from './VolumeAnalysis';\nimport { CalibrationModal } from './CalibrationModal';\nimport { TestPanel } from './TestPanel';\nimport { SettingsPanel } from './SettingsPanel';\nimport { alertManager } from '../utils/alertManager';\nimport { volumeAnalyzer } from '../utils/volumeAnalyzer';\nimport { alertSound } from '../utils/alertSound';\nimport { settingsManager } from '../utils/settingsManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 20px;\n  max-width: 800px;\n  margin: 0 auto;\n`;\n_c = Container;\nconst ErrorMessage = styled.div`\n  background-color: #ffebee;\n  color: #c62828;\n  padding: 16px;\n  border-radius: 4px;\n  margin: 16px 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 16px;\n`;\n_c2 = ErrorMessage;\nconst Button = styled.button`\n  background-color: #c62828;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: #b71c1c;\n  }\n\n  &:active {\n    background-color: #a31515;\n  }\n`;\n_c3 = Button;\nexport const AudioTest = () => {\n  _s();\n  const [threshold, setThreshold] = useState(30);\n  const [volumeState, setVolumeState] = useState('normal');\n  const [alert, setAlert] = useState({\n    visible: false,\n    message: '',\n    type: 'info'\n  });\n  const [analysis, setAnalysis] = useState({\n    currentStats: {\n      min: 0,\n      max: 0,\n      average: 0,\n      samples: [],\n      timestamp: Date.now()\n    },\n    trend: 'stable'\n  });\n  const [isCalibrating, setIsCalibrating] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [settings, setSettings] = useState(settingsManager.getSettings());\n  const [error, setError] = useState(null);\n  const {\n    volume,\n    isMonitoring,\n    startMonitoring,\n    stopMonitoring\n  } = useAudioMonitor({\n    threshold,\n    onVolumeLow: volume => {\n      alertManager.handleVolume(volume, threshold);\n    }\n  });\n  const handleAlertClose = useCallback(() => {\n    setAlert(prev => ({\n      ...prev,\n      visible: false\n    }));\n  }, []);\n  const handleThresholdChange = useCallback(newThreshold => {\n    setThreshold(newThreshold);\n    settingsManager.updateSettings({\n      threshold: newThreshold\n    });\n  }, []);\n  const handleSettingsChange = useCallback(newSettings => {\n    settingsManager.updateSettings(newSettings);\n    setSettings(settingsManager.getSettings());\n  }, []);\n  useEffect(() => {\n    alertManager.updateOptions({\n      textEnabled: settings.textAlerts,\n      soundEnabled: settings.soundAlerts,\n      minInterval: settings.alertInterval,\n      threshold: threshold\n    });\n    alertManager.setCallbacks({\n      onVisualAlert: isLow => {\n        setVolumeState(isLow ? 'warning' : 'normal');\n      },\n      onTextAlert: (message, type) => {\n        setAlert({\n          visible: true,\n          message,\n          type: type\n        });\n      }\n    });\n    return () => {\n      alertManager.reset();\n    };\n  }, [settings, threshold]);\n  const handleTest = useCallback(type => {\n    switch (type) {\n      case 'lowVolume':\n        let count = 0;\n        const interval = setInterval(() => {\n          if (count++ < 50) {\n            volumeAnalyzer.addSample(15, threshold);\n            alertManager.handleVolume(15, threshold);\n          } else {\n            clearInterval(interval);\n          }\n        }, 100);\n        break;\n      case 'normalVolume':\n        volumeAnalyzer.addSample(50, threshold);\n        alertManager.handleVolume(50, threshold);\n        break;\n      case 'volumeSpike':\n        for (let i = 0; i < 10; i++) {\n          setTimeout(() => {\n            const volume = i % 2 ? 90 : 20;\n            volumeAnalyzer.addSample(volume, threshold);\n            alertManager.handleVolume(volume, threshold);\n          }, i * 100);\n        }\n        break;\n      case 'visualAlert':\n        alertManager.handleVolume(20, threshold);\n        break;\n      case 'textAlert':\n        setAlert({\n          visible: true,\n          message: '这是一条测试文字提示',\n          type: 'info'\n        });\n        break;\n      case 'soundAlert':\n        alertSound.playAlert(440);\n        break;\n      case 'allAlerts':\n        alertManager.handleVolume(10, threshold);\n        alertSound.playAlert(880);\n        setAlert({\n          visible: true,\n          message: '触发了所有类型的提示',\n          type: 'warning'\n        });\n        break;\n      case 'microphoneError':\n        setError('麦克风访问被拒绝或未找到可用的音频输入设备');\n        break;\n      case 'connectionError':\n        setError('音频处理服务连接失败');\n        break;\n    }\n  }, [threshold]);\n  const requestMicrophoneAccess = async () => {\n    try {\n      await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      // 授权成功，开始监控\n      startMonitoring();\n    } catch (error) {\n      setError('请允许访问麦克风以开始音量监控');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(AlertNotification, {\n      isVisible: alert.visible,\n      message: alert.message,\n      type: alert.type,\n      onClose: handleAlertClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VolumeVisualizer, {\n      volume: volume,\n      threshold: threshold,\n      isCompact: settings.compactMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VolumeAnalysis, {\n      analysis: analysis,\n      isCompact: settings.compactMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TestPanel, {\n      onTest: handleTest,\n      currentVolume: volume,\n      threshold: threshold\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SettingsPanel, {\n      isOpen: isSettingsOpen,\n      settings: settings,\n      onClose: () => setIsSettingsOpen(false),\n      onChange: handleSettingsChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalibrationModal, {\n      isOpen: isCalibrating,\n      onClose: () => setIsCalibrating(false),\n      onComplete: newThreshold => {\n        setThreshold(newThreshold);\n        setIsCalibrating(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: [error, /*#__PURE__*/_jsxDEV(Button, {\n        onClick: requestMicrophoneAccess,\n        children: \"\\u91CD\\u8BD5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioTest, \"IWLru4AEQOqo9UUfUbYCMgWOhig=\", false, function () {\n  return [useAudioMonitor];\n});\n_c4 = AudioTest;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ErrorMessage\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"AudioTest\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","styled","useAudioMonitor","AlertNotification","VolumeVisualizer","VolumeAnalysis","CalibrationModal","TestPanel","SettingsPanel","alertManager","volumeAnalyzer","alertSound","settingsManager","jsxDEV","_jsxDEV","Container","div","_c","ErrorMessage","_c2","Button","button","_c3","AudioTest","_s","threshold","setThreshold","volumeState","setVolumeState","alert","setAlert","visible","message","type","analysis","setAnalysis","currentStats","min","max","average","samples","timestamp","Date","now","trend","isCalibrating","setIsCalibrating","isSettingsOpen","setIsSettingsOpen","settings","setSettings","getSettings","error","setError","volume","isMonitoring","startMonitoring","stopMonitoring","onVolumeLow","handleVolume","handleAlertClose","prev","handleThresholdChange","newThreshold","updateSettings","handleSettingsChange","newSettings","updateOptions","textEnabled","textAlerts","soundEnabled","soundAlerts","minInterval","alertInterval","setCallbacks","onVisualAlert","isLow","onTextAlert","reset","handleTest","count","interval","setInterval","addSample","clearInterval","i","setTimeout","playAlert","requestMicrophoneAccess","navigator","mediaDevices","getUserMedia","audio","children","isVisible","onClose","fileName","_jsxFileName","lineNumber","columnNumber","isCompact","compactMode","onTest","currentVolume","isOpen","onChange","onComplete","onClick","_c4","$RefreshReg$"],"sources":["D:/projects/volume-monitor/src/components/AudioTest.tsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useAudioMonitor } from '../hooks/useAudioMonitor';\r\nimport { AlertNotification } from './AlertNotification';\r\nimport { VolumeVisualizer } from './VolumeVisualizer';\r\nimport { VolumeAnalysis } from './VolumeAnalysis';\r\nimport { CalibrationModal } from './CalibrationModal';\r\nimport { TestPanel } from './TestPanel';\r\nimport { SettingsPanel } from './SettingsPanel';\r\nimport { alertManager } from '../utils/alertManager';\r\nimport { volumeAnalyzer } from '../utils/volumeAnalyzer';\r\nimport { alertSound } from '../utils/alertSound';\r\nimport { settingsManager } from '../utils/settingsManager';\r\nimport type { Settings, AnalysisResult } from '../types';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  background-color: #ffebee;\r\n  color: #c62828;\r\n  padding: 16px;\r\n  border-radius: 4px;\r\n  margin: 16px 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  gap: 16px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: #c62828;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: background-color 0.2s;\r\n\r\n  &:hover {\r\n    background-color: #b71c1c;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #a31515;\r\n  }\r\n`;\r\n\r\nexport const AudioTest: React.FC = () => {\r\n  const [threshold, setThreshold] = useState(30);\r\n  const [volumeState, setVolumeState] = useState<'normal' | 'warning'>('normal');\r\n  const [alert, setAlert] = useState<{\r\n    visible: boolean;\r\n    message: string;\r\n    type: 'warning' | 'error' | 'info';\r\n  }>({\r\n    visible: false,\r\n    message: '',\r\n    type: 'info'\r\n  });\r\n\r\n  const [analysis, setAnalysis] = useState<AnalysisResult>({\r\n    currentStats: {\r\n      min: 0,\r\n      max: 0,\r\n      average: 0,\r\n      samples: [],\r\n      timestamp: Date.now()\r\n    },\r\n    trend: 'stable'\r\n  });\r\n\r\n  const [isCalibrating, setIsCalibrating] = useState(false);\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n  const [settings, setSettings] = useState<Settings>(settingsManager.getSettings());\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const { volume, isMonitoring, startMonitoring, stopMonitoring } = useAudioMonitor({\r\n    threshold,\r\n    onVolumeLow: (volume) => {\r\n      alertManager.handleVolume(volume, threshold);\r\n    }\r\n  });\r\n\r\n  const handleAlertClose = useCallback(() => {\r\n    setAlert(prev => ({ ...prev, visible: false }));\r\n  }, []);\r\n\r\n  const handleThresholdChange = useCallback((newThreshold: number) => {\r\n    setThreshold(newThreshold);\r\n    settingsManager.updateSettings({ threshold: newThreshold });\r\n  }, []);\r\n\r\n  const handleSettingsChange = useCallback((newSettings: Partial<Settings>) => {\r\n    settingsManager.updateSettings(newSettings);\r\n    setSettings(settingsManager.getSettings());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    alertManager.updateOptions({\r\n      textEnabled: settings.textAlerts,\r\n      soundEnabled: settings.soundAlerts,\r\n      minInterval: settings.alertInterval,\r\n      threshold: threshold\r\n    });\r\n\r\n    alertManager.setCallbacks({\r\n      onVisualAlert: (isLow) => {\r\n        setVolumeState(isLow ? 'warning' : 'normal');\r\n      },\r\n      onTextAlert: (message, type) => {\r\n        setAlert({\r\n          visible: true,\r\n          message,\r\n          type: type as 'warning' | 'error' | 'info'\r\n        });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      alertManager.reset();\r\n    };\r\n  }, [settings, threshold]);\r\n\r\n  const handleTest = useCallback((type: string) => {\r\n    switch (type) {\r\n      case 'lowVolume':\r\n        let count = 0;\r\n        const interval = setInterval(() => {\r\n          if (count++ < 50) {\r\n            volumeAnalyzer.addSample(15, threshold);\r\n            alertManager.handleVolume(15, threshold);\r\n          } else {\r\n            clearInterval(interval);\r\n          }\r\n        }, 100);\r\n        break;\r\n\r\n      case 'normalVolume':\r\n        volumeAnalyzer.addSample(50, threshold);\r\n        alertManager.handleVolume(50, threshold);\r\n        break;\r\n\r\n      case 'volumeSpike':\r\n        for (let i = 0; i < 10; i++) {\r\n          setTimeout(() => {\r\n            const volume = i % 2 ? 90 : 20;\r\n            volumeAnalyzer.addSample(volume, threshold);\r\n            alertManager.handleVolume(volume, threshold);\r\n          }, i * 100);\r\n        }\r\n        break;\r\n\r\n      case 'visualAlert':\r\n        alertManager.handleVolume(20, threshold);\r\n        break;\r\n\r\n      case 'textAlert':\r\n        setAlert({\r\n          visible: true,\r\n          message: '这是一条测试文字提示',\r\n          type: 'info'\r\n        });\r\n        break;\r\n\r\n      case 'soundAlert':\r\n        alertSound.playAlert(440);\r\n        break;\r\n\r\n      case 'allAlerts':\r\n        alertManager.handleVolume(10, threshold);\r\n        alertSound.playAlert(880);\r\n        setAlert({\r\n          visible: true,\r\n          message: '触发了所有类型的提示',\r\n          type: 'warning'\r\n        });\r\n        break;\r\n\r\n      case 'microphoneError':\r\n        setError('麦克风访问被拒绝或未找到可用的音频输入设备');\r\n        break;\r\n\r\n      case 'connectionError':\r\n        setError('音频处理服务连接失败');\r\n        break;\r\n    }\r\n  }, [threshold]);\r\n\r\n  const requestMicrophoneAccess = async () => {\r\n    try {\r\n      await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      // 授权成功，开始监控\r\n      startMonitoring();\r\n    } catch (error) {\r\n      setError('请允许访问麦克风以开始音量监控');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <AlertNotification\r\n        isVisible={alert.visible}\r\n        message={alert.message}\r\n        type={alert.type}\r\n        onClose={handleAlertClose}\r\n      />\r\n\r\n      <VolumeVisualizer\r\n        volume={volume}\r\n        threshold={threshold}\r\n        isCompact={settings.compactMode}\r\n      />\r\n\r\n      <VolumeAnalysis\r\n        analysis={analysis}\r\n        isCompact={settings.compactMode}\r\n      />\r\n\r\n      <TestPanel\r\n        onTest={handleTest}\r\n        currentVolume={volume}\r\n        threshold={threshold}\r\n      />\r\n\r\n      <SettingsPanel\r\n        isOpen={isSettingsOpen}\r\n        settings={settings}\r\n        onClose={() => setIsSettingsOpen(false)}\r\n        onChange={handleSettingsChange}\r\n      />\r\n\r\n      <CalibrationModal\r\n        isOpen={isCalibrating}\r\n        onClose={() => setIsCalibrating(false)}\r\n        onComplete={(newThreshold) => {\r\n          setThreshold(newThreshold);\r\n          setIsCalibrating(false);\r\n        }}\r\n      />\r\n\r\n      {error && (\r\n        <ErrorMessage>\r\n          {error}\r\n          <Button onClick={requestMicrophoneAccess}>重试</Button>\r\n        </ErrorMessage>\r\n      )}\r\n    </Container>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}