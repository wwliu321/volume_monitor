{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\volume-monitor\\\\src\\\\components\\\\AudioTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { useAudioMonitor } from '../hooks/useAudioMonitor';\nimport { VolumeVisualizer } from './VolumeVisualizer';\nimport styled from 'styled-components';\nimport { AlertNotification } from './AlertNotification';\nimport { alertSound } from '../utils/alertSound';\nimport { settingsManager } from '../utils/settingsManager';\nimport { CalibrationModal } from './CalibrationModal';\nimport { SettingsPanel } from './SettingsPanel';\nimport { alertManager } from '../utils/alertManager';\nimport { volumeAnalyzer } from '../utils/volumeAnalyzer';\nimport { VolumeAnalysis } from './VolumeAnalysis';\nimport { TestPanel } from './TestPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c = Container;\nconst Controls = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  gap: 10px;\n`;\n_c2 = Controls;\nconst Button = styled.button`\n  padding: 10px 20px;\n  font-size: 16px;\n  border: none;\n  border-radius: 4px;\n  background-color: #2196f3;\n  color: white;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #1976d2;\n  }\n\n  &:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n`;\n_c3 = Button;\nconst ErrorMessage = styled.div`\n  color: #f44336;\n  margin-bottom: 20px;\n  padding: 10px;\n  border-radius: 4px;\n  background-color: #ffebee;\n`;\n_c4 = ErrorMessage;\nexport const AudioTest = () => {\n  _s();\n  const [threshold, setThreshold] = useState(30);\n  const [isCompact, setIsCompact] = useState(false);\n  const [alert, setAlert] = useState({\n    visible: false,\n    message: '',\n    type: 'warning'\n  });\n  const [isCalibrating, setIsCalibrating] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [analysis, setAnalysis] = useState({\n    currentStats: {\n      min: 0,\n      max: 0,\n      average: 0,\n      samples: 0,\n      lowVolumeCount: 0,\n      timestamp: Date.now()\n    },\n    trend: 'stable'\n  });\n  const [volumeState, setVolumeState] = useState('normal');\n  useEffect(() => {\n    const settings = settingsManager.getSettings();\n    setThreshold(settings.threshold);\n    setIsCompact(settings.isCompact);\n    alertSound.setVolume(settings.alertVolume);\n  }, []);\n  const saveSettings = useCallback(() => {\n    settingsManager.updateSettings({\n      threshold,\n      isCompact\n    });\n  }, [threshold, isCompact]);\n  useEffect(() => {\n    saveSettings();\n  }, [threshold, isCompact, saveSettings]);\n  const handleCalibrationComplete = useCallback(newThreshold => {\n    setThreshold(newThreshold);\n    setIsCalibrating(false);\n  }, []);\n  const handleVolumeLow = useCallback(volume => {\n    alertManager.handleVolume(volume, threshold);\n  }, [threshold]);\n  const handleAlertClose = useCallback(() => {\n    setAlert(prev => ({\n      ...prev,\n      visible: false\n    }));\n  }, []);\n  const {\n    volume,\n    isMonitoring,\n    error,\n    startMonitoring,\n    stopMonitoring\n  } = useAudioMonitor({\n    threshold,\n    onVolumeLow: handleVolumeLow\n  });\n  const handleThresholdChange = useCallback(newThreshold => {\n    setThreshold(newThreshold);\n  }, []);\n  const handleSettingsChange = useCallback(newSettings => {\n    settingsManager.updateSettings(newSettings);\n    if (newSettings.threshold !== undefined) setThreshold(newSettings.threshold);\n    if (newSettings.isCompact !== undefined) setIsCompact(newSettings.isCompact);\n    if (newSettings.alertVolume !== undefined) alertSound.setVolume(newSettings.alertVolume);\n    alertManager.updateOptions({\n      textEnabled: newSettings.textAlertEnabled,\n      soundEnabled: newSettings.soundAlertEnabled\n    });\n  }, []);\n  const handleSettingsReset = useCallback(() => {\n    settingsManager.resetSettings();\n    const defaultSettings = settingsManager.getSettings();\n    setThreshold(defaultSettings.threshold);\n    setIsCompact(defaultSettings.isCompact);\n    alertSound.setVolume(defaultSettings.alertVolume);\n  }, []);\n  useEffect(() => {\n    alertManager.updateOptions({\n      textEnabled: settings.textAlerts,\n      soundEnabled: settings.soundAlerts,\n      visualEnabled: true,\n      minInterval: settings.alertInterval,\n      threshold: threshold\n    });\n    alertManager.setCallbacks({\n      onVisualAlert: isLow => {\n        setVolumeState(isLow ? 'warning' : 'normal');\n      },\n      onTextAlert: (message, type) => {\n        setAlert({\n          visible: true,\n          message,\n          type: type\n        });\n      }\n    });\n    return () => {\n      alertManager.reset();\n    };\n  }, [settings, threshold]);\n  useEffect(() => {\n    if (!isMonitoring) return;\n    const analysisInterval = setInterval(() => {\n      const volume = audioContextManager.getVolume();\n      const analysis = volumeAnalyzer.addSample(volume, threshold);\n      setAnalysis(analysis);\n      alertManager.handleVolume(volume, threshold);\n    }, 100);\n    return () => {\n      clearInterval(analysisInterval);\n      volumeAnalyzer.reset();\n    };\n  }, [isMonitoring, threshold]);\n  const handleTest = useCallback((type, params) => {\n    switch (type) {\n      case 'lowVolume':\n        // 模拟5秒的低音量\n        let count = 0;\n        const interval = setInterval(() => {\n          if (count++ < 50) {\n            volumeAnalyzer.addSample(15, threshold);\n            alertManager.handleVolume(15, threshold);\n          } else {\n            clearInterval(interval);\n          }\n        }, 100);\n        break;\n      case 'normalVolume':\n        // 模拟正常音量\n        volumeAnalyzer.addSample(50, threshold);\n        alertManager.handleVolume(50, threshold);\n        break;\n      case 'volumeSpike':\n        // 模拟音量突变\n        for (let i = 0; i < 10; i++) {\n          setTimeout(() => {\n            const volume = i % 2 ? 90 : 20;\n            volumeAnalyzer.addSample(volume, threshold);\n            alertManager.handleVolume(volume, threshold);\n          }, i * 100);\n        }\n        break;\n      case 'volumeDrop':\n        // 模拟音量骤降\n        const samples = Array.from({\n          length: 10\n        }, (_, i) => 80 - i * 8);\n        samples.forEach((volume, i) => {\n          setTimeout(() => {\n            volumeAnalyzer.addSample(volume, threshold);\n            alertManager.handleVolume(volume, threshold);\n          }, i * 100);\n        });\n        break;\n      case 'visualAlert':\n        alertManager.handleVolume(20, threshold);\n        break;\n      case 'textAlert':\n        setAlert({\n          visible: true,\n          message: '这是一条测试文字提示',\n          type: 'info'\n        });\n        break;\n      case 'soundAlert':\n        alertSound.playAlert('warning');\n        break;\n      case 'allAlerts':\n        alertManager.handleVolume(10, threshold);\n        alertSound.playAlert('urgent');\n        setAlert({\n          visible: true,\n          message: '触发了所有类型的提示',\n          type: 'warning'\n        });\n        break;\n      case 'microphoneError':\n        setError('麦克风访问被拒绝或未找到可用的音频输入设备');\n        break;\n      case 'connectionError':\n        setError('音频处理服务连接失败');\n        break;\n    }\n  }, [threshold]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(AlertNotification, {\n      isVisible: alert.visible,\n      message: alert.message,\n      type: alert.type,\n      duration: 5000,\n      onClose: () => setAlert(prev => ({\n        ...prev,\n        visible: false\n      })),\n      showProgress: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u97F3\\u9891\\u76D1\\u6D4B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: isMonitoring ? stopMonitoring : startMonitoring,\n        children: isMonitoring ? '停止监测' : '开始监测'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsCompact(!isCompact),\n        children: isCompact ? '展开视图' : '紧凑视图'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsCalibrating(true),\n        children: \"\\u5F00\\u59CB\\u6821\\u51C6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsSettingsOpen(true),\n        children: \"\\u8BBE\\u7F6E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: [\"\\u9519\\u8BEF: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(VolumeVisualizer, {\n      volume: volume,\n      threshold: threshold,\n      isCompact: settings.compactMode,\n      state: volumeState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VolumeAnalysis, {\n      analysis: analysis,\n      isCompact: settings.compactMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalibrationModal, {\n      isOpen: isCalibrating,\n      onClose: () => setIsCalibrating(false),\n      onComplete: handleCalibrationComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SettingsPanel, {\n      isOpen: isSettingsOpen,\n      settings: settingsManager.getSettings(),\n      onSettingsChange: handleSettingsChange,\n      onClose: () => setIsSettingsOpen(false),\n      onReset: handleSettingsReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TestPanel, {\n      onTest: handleTest,\n      currentVolume: volume,\n      threshold: threshold\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioTest, \"5TZegbmfWLqt2tafl1u60BRaT3I=\", false, function () {\n  return [useAudioMonitor];\n});\n_c5 = AudioTest;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Controls\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"ErrorMessage\");\n$RefreshReg$(_c5, \"AudioTest\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","useAudioMonitor","VolumeVisualizer","styled","AlertNotification","alertSound","settingsManager","CalibrationModal","SettingsPanel","alertManager","volumeAnalyzer","VolumeAnalysis","TestPanel","jsxDEV","_jsxDEV","Container","div","_c","Controls","_c2","Button","button","_c3","ErrorMessage","_c4","AudioTest","_s","threshold","setThreshold","isCompact","setIsCompact","alert","setAlert","visible","message","type","isCalibrating","setIsCalibrating","isSettingsOpen","setIsSettingsOpen","analysis","setAnalysis","currentStats","min","max","average","samples","lowVolumeCount","timestamp","Date","now","trend","volumeState","setVolumeState","settings","getSettings","setVolume","alertVolume","saveSettings","updateSettings","handleCalibrationComplete","newThreshold","handleVolumeLow","volume","handleVolume","handleAlertClose","prev","isMonitoring","error","startMonitoring","stopMonitoring","onVolumeLow","handleThresholdChange","handleSettingsChange","newSettings","undefined","updateOptions","textEnabled","textAlertEnabled","soundEnabled","soundAlertEnabled","handleSettingsReset","resetSettings","defaultSettings","textAlerts","soundAlerts","visualEnabled","minInterval","alertInterval","setCallbacks","onVisualAlert","isLow","onTextAlert","reset","analysisInterval","setInterval","audioContextManager","getVolume","addSample","clearInterval","handleTest","params","count","interval","i","setTimeout","Array","from","length","_","forEach","playAlert","setError","children","isVisible","duration","onClose","showProgress","fileName","_jsxFileName","lineNumber","columnNumber","onClick","compactMode","state","isOpen","onComplete","onSettingsChange","onReset","onTest","currentVolume","_c5","$RefreshReg$"],"sources":["D:/projects/volume-monitor/src/components/AudioTest.tsx"],"sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\r\nimport { useAudioMonitor } from '../hooks/useAudioMonitor';\r\nimport { VolumeVisualizer } from './VolumeVisualizer';\r\nimport styled from 'styled-components';\r\nimport { AlertNotification } from './AlertNotification';\r\nimport { alertSound } from '../utils/alertSound';\r\nimport { settingsManager } from '../utils/settingsManager';\r\nimport { CalibrationModal } from './CalibrationModal';\r\nimport { SettingsPanel } from './SettingsPanel';\r\nimport { alertManager } from '../utils/alertManager';\r\nimport { volumeAnalyzer } from '../utils/volumeAnalyzer';\r\nimport { VolumeAnalysis } from './VolumeAnalysis';\r\nimport { TestPanel } from './TestPanel';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Controls = styled.div`\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: #2196f3;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n\r\n  &:hover {\r\n    background-color: #1976d2;\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: #ccc;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: #f44336;\r\n  margin-bottom: 20px;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  background-color: #ffebee;\r\n`;\r\n\r\nexport const AudioTest: React.FC = () => {\r\n  const [threshold, setThreshold] = useState(30);\r\n  const [isCompact, setIsCompact] = useState(false);\r\n  const [alert, setAlert] = useState<{\r\n    visible: boolean;\r\n    message: string;\r\n    type: 'warning' | 'error' | 'info';\r\n  }>({\r\n    visible: false,\r\n    message: '',\r\n    type: 'warning'\r\n  });\r\n  const [isCalibrating, setIsCalibrating] = useState(false);\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n  const [analysis, setAnalysis] = useState<AnalysisResult>({\r\n    currentStats: {\r\n      min: 0,\r\n      max: 0,\r\n      average: 0,\r\n      samples: 0,\r\n      lowVolumeCount: 0,\r\n      timestamp: Date.now()\r\n    },\r\n    trend: 'stable'\r\n  });\r\n  const [volumeState, setVolumeState] = useState<'warning' | 'normal'>('normal');\r\n\r\n  useEffect(() => {\r\n    const settings = settingsManager.getSettings();\r\n    setThreshold(settings.threshold);\r\n    setIsCompact(settings.isCompact);\r\n    alertSound.setVolume(settings.alertVolume);\r\n  }, []);\r\n\r\n  const saveSettings = useCallback(() => {\r\n    settingsManager.updateSettings({\r\n      threshold,\r\n      isCompact,\r\n    });\r\n  }, [threshold, isCompact]);\r\n\r\n  useEffect(() => {\r\n    saveSettings();\r\n  }, [threshold, isCompact, saveSettings]);\r\n\r\n  const handleCalibrationComplete = useCallback((newThreshold: number) => {\r\n    setThreshold(newThreshold);\r\n    setIsCalibrating(false);\r\n  }, []);\r\n\r\n  const handleVolumeLow = useCallback((volume: number) => {\r\n    alertManager.handleVolume(volume, threshold);\r\n  }, [threshold]);\r\n\r\n  const handleAlertClose = useCallback(() => {\r\n    setAlert(prev => ({ ...prev, visible: false }));\r\n  }, []);\r\n\r\n  const { \r\n    volume, \r\n    isMonitoring, \r\n    error, \r\n    startMonitoring, \r\n    stopMonitoring \r\n  } = useAudioMonitor({\r\n    threshold,\r\n    onVolumeLow: handleVolumeLow\r\n  });\r\n\r\n  const handleThresholdChange = useCallback((newThreshold: number) => {\r\n    setThreshold(newThreshold);\r\n  }, []);\r\n\r\n  const handleSettingsChange = useCallback((newSettings: Partial<Settings>) => {\r\n    settingsManager.updateSettings(newSettings);\r\n    \r\n    if (newSettings.threshold !== undefined) setThreshold(newSettings.threshold);\r\n    if (newSettings.isCompact !== undefined) setIsCompact(newSettings.isCompact);\r\n    if (newSettings.alertVolume !== undefined) alertSound.setVolume(newSettings.alertVolume);\r\n\r\n    alertManager.updateOptions({\r\n      textEnabled: newSettings.textAlertEnabled,\r\n      soundEnabled: newSettings.soundAlertEnabled\r\n    });\r\n  }, []);\r\n\r\n  const handleSettingsReset = useCallback(() => {\r\n    settingsManager.resetSettings();\r\n    const defaultSettings = settingsManager.getSettings();\r\n    setThreshold(defaultSettings.threshold);\r\n    setIsCompact(defaultSettings.isCompact);\r\n    alertSound.setVolume(defaultSettings.alertVolume);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    alertManager.updateOptions({\r\n      textEnabled: settings.textAlerts,\r\n      soundEnabled: settings.soundAlerts,\r\n      visualEnabled: true,\r\n      minInterval: settings.alertInterval,\r\n      threshold: threshold\r\n    });\r\n\r\n    alertManager.setCallbacks({\r\n      onVisualAlert: (isLow) => {\r\n        setVolumeState(isLow ? 'warning' : 'normal');\r\n      },\r\n      onTextAlert: (message, type) => {\r\n        setAlert({\r\n          visible: true,\r\n          message,\r\n          type: type as 'warning' | 'error' | 'info'\r\n        });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      alertManager.reset();\r\n    };\r\n  }, [settings, threshold]);\r\n\r\n  useEffect(() => {\r\n    if (!isMonitoring) return;\r\n\r\n    const analysisInterval = setInterval(() => {\r\n      const volume = audioContextManager.getVolume();\r\n      const analysis = volumeAnalyzer.addSample(volume, threshold);\r\n      \r\n      setAnalysis(analysis);\r\n\r\n      alertManager.handleVolume(volume, threshold);\r\n    }, 100);\r\n\r\n    return () => {\r\n      clearInterval(analysisInterval);\r\n      volumeAnalyzer.reset();\r\n    };\r\n  }, [isMonitoring, threshold]);\r\n\r\n  const handleTest = useCallback((type: string, params?: any) => {\r\n    switch (type) {\r\n      case 'lowVolume':\r\n        // 模拟5秒的低音量\r\n        let count = 0;\r\n        const interval = setInterval(() => {\r\n          if (count++ < 50) {\r\n            volumeAnalyzer.addSample(15, threshold);\r\n            alertManager.handleVolume(15, threshold);\r\n          } else {\r\n            clearInterval(interval);\r\n          }\r\n        }, 100);\r\n        break;\r\n\r\n      case 'normalVolume':\r\n        // 模拟正常音量\r\n        volumeAnalyzer.addSample(50, threshold);\r\n        alertManager.handleVolume(50, threshold);\r\n        break;\r\n\r\n      case 'volumeSpike':\r\n        // 模拟音量突变\r\n        for (let i = 0; i < 10; i++) {\r\n          setTimeout(() => {\r\n            const volume = i % 2 ? 90 : 20;\r\n            volumeAnalyzer.addSample(volume, threshold);\r\n            alertManager.handleVolume(volume, threshold);\r\n          }, i * 100);\r\n        }\r\n        break;\r\n\r\n      case 'volumeDrop':\r\n        // 模拟音量骤降\r\n        const samples = Array.from({ length: 10 }, (_, i) => 80 - i * 8);\r\n        samples.forEach((volume, i) => {\r\n          setTimeout(() => {\r\n            volumeAnalyzer.addSample(volume, threshold);\r\n            alertManager.handleVolume(volume, threshold);\r\n          }, i * 100);\r\n        });\r\n        break;\r\n\r\n      case 'visualAlert':\r\n        alertManager.handleVolume(20, threshold);\r\n        break;\r\n\r\n      case 'textAlert':\r\n        setAlert({\r\n          visible: true,\r\n          message: '这是一条测试文字提示',\r\n          type: 'info'\r\n        });\r\n        break;\r\n\r\n      case 'soundAlert':\r\n        alertSound.playAlert('warning');\r\n        break;\r\n\r\n      case 'allAlerts':\r\n        alertManager.handleVolume(10, threshold);\r\n        alertSound.playAlert('urgent');\r\n        setAlert({\r\n          visible: true,\r\n          message: '触发了所有类型的提示',\r\n          type: 'warning'\r\n        });\r\n        break;\r\n\r\n      case 'microphoneError':\r\n        setError('麦克风访问被拒绝或未找到可用的音频输入设备');\r\n        break;\r\n\r\n      case 'connectionError':\r\n        setError('音频处理服务连接失败');\r\n        break;\r\n    }\r\n  }, [threshold]);\r\n\r\n  return (\r\n    <Container>\r\n      <AlertNotification\r\n        isVisible={alert.visible}\r\n        message={alert.message}\r\n        type={alert.type}\r\n        duration={5000}\r\n        onClose={() => setAlert(prev => ({ ...prev, visible: false }))}\r\n        showProgress={true}\r\n      />\r\n      \r\n      <h2>音频监测</h2>\r\n      \r\n      <Controls>\r\n        <Button onClick={isMonitoring ? stopMonitoring : startMonitoring}>\r\n          {isMonitoring ? '停止监测' : '开始监测'}\r\n        </Button>\r\n        <Button onClick={() => setIsCompact(!isCompact)}>\r\n          {isCompact ? '展开视图' : '紧凑视图'}\r\n        </Button>\r\n        <Button onClick={() => setIsCalibrating(true)}>\r\n          开始校准\r\n        </Button>\r\n        <Button onClick={() => setIsSettingsOpen(true)}>\r\n          设置\r\n        </Button>\r\n      </Controls>\r\n\r\n      {error && <ErrorMessage>错误: {error}</ErrorMessage>}\r\n\r\n      <VolumeVisualizer\r\n        volume={volume}\r\n        threshold={threshold}\r\n        isCompact={settings.compactMode}\r\n        state={volumeState}\r\n      />\r\n\r\n      <VolumeAnalysis\r\n        analysis={analysis}\r\n        isCompact={settings.compactMode}\r\n      />\r\n\r\n      <CalibrationModal\r\n        isOpen={isCalibrating}\r\n        onClose={() => setIsCalibrating(false)}\r\n        onComplete={handleCalibrationComplete}\r\n      />\r\n\r\n      <SettingsPanel\r\n        isOpen={isSettingsOpen}\r\n        settings={settingsManager.getSettings()}\r\n        onSettingsChange={handleSettingsChange}\r\n        onClose={() => setIsSettingsOpen(false)}\r\n        onReset={handleSettingsReset}\r\n      />\r\n\r\n      <TestPanel \r\n        onTest={handleTest}\r\n        currentVolume={volume}\r\n        threshold={threshold}\r\n      />\r\n    </Container>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}