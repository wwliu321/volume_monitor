{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\volume-monitor\\\\src\\\\components\\\\AudioTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { SettingsPanel } from './SettingsPanel';\nimport { VolumeVisualizer } from './VolumeVisualizer';\nimport { VolumeAnalyzer } from './VolumeAnalyzer';\nimport { useAudioMonitor } from '../hooks/useAudioMonitor';\nimport { alertManager } from '../utils/alertManager';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  margin-left: 280px;\n  padding: 20px;\n`;\n_c = Container;\nconst MainContent = styled.div`\n  padding: 20px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n`;\n_c2 = MainContent;\nexport const AudioTest = () => {\n  _s();\n  const [settings, setSettings] = useState({\n    textAlertEnabled: true,\n    soundAlertEnabled: true,\n    isCompact: false,\n    alertInterval: 1000,\n    threshold: -30,\n    lowVolumeDuration: 3000,\n    alertVolume: 0.5\n  });\n  const [currentLowVolumeDuration, setCurrentLowVolumeDuration] = useState(0);\n  const {\n    volume,\n    error,\n    startMonitoring\n  } = useAudioMonitor({\n    threshold: settings.threshold,\n    lowVolumeDuration: settings.lowVolumeDuration,\n    onVolumeLow: useCallback(() => {\n      alertManager.trigger('low-volume');\n    }, []),\n    onLowVolumeDurationUpdate: useCallback(duration => {\n      setCurrentLowVolumeDuration(duration);\n    }, [])\n  });\n  const handleSettingsChange = useCallback(newSettings => {\n    console.log('Settings changing to:', newSettings);\n    setSettings(prevSettings => {\n      const updatedSettings = {\n        ...prevSettings,\n        ...newSettings\n      };\n      alertManager.updateConfig({\n        textAlerts: updatedSettings.textAlertEnabled,\n        soundAlerts: updatedSettings.soundAlertEnabled,\n        threshold: updatedSettings.threshold,\n        alertInterval: updatedSettings.alertInterval,\n        lowVolumeDuration: updatedSettings.lowVolumeDuration,\n        alertVolume: updatedSettings.alertVolume\n      });\n      return updatedSettings;\n    });\n  }, []);\n  useEffect(() => {\n    startMonitoring();\n  }, [startMonitoring]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(MainContent, {\n        children: [/*#__PURE__*/_jsxDEV(VolumeVisualizer, {\n          volume: volume,\n          threshold: settings.threshold,\n          isCompact: settings.isCompact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VolumeAnalyzer, {\n          volume: volume,\n          threshold: settings.threshold,\n          lowVolumeDuration: settings.lowVolumeDuration,\n          currentLowVolumeDuration: currentLowVolumeDuration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SettingsPanel, {\n      settings: {\n        threshold: settings.threshold,\n        lowVolumeDuration: settings.lowVolumeDuration,\n        soundAlertEnabled: settings.soundAlertEnabled,\n        alertVolume: settings.alertVolume\n      },\n      onSettingsChange: handleSettingsChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AudioTest, \"2kuyoBOb1Q5Gv0OV4i5BNZ9f3DI=\", false, function () {\n  return [useAudioMonitor];\n});\n_c3 = AudioTest;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"MainContent\");\n$RefreshReg$(_c3, \"AudioTest\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","styled","SettingsPanel","VolumeVisualizer","VolumeAnalyzer","useAudioMonitor","alertManager","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","MainContent","_c2","AudioTest","_s","settings","setSettings","textAlertEnabled","soundAlertEnabled","isCompact","alertInterval","threshold","lowVolumeDuration","alertVolume","currentLowVolumeDuration","setCurrentLowVolumeDuration","volume","error","startMonitoring","onVolumeLow","trigger","onLowVolumeDurationUpdate","duration","handleSettingsChange","newSettings","console","log","prevSettings","updatedSettings","updateConfig","textAlerts","soundAlerts","children","fileName","_jsxFileName","lineNumber","columnNumber","onSettingsChange","_c3","$RefreshReg$"],"sources":["D:/projects/volume-monitor/src/components/AudioTest.tsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { SettingsPanel } from './SettingsPanel';\r\nimport { VolumeVisualizer } from './VolumeVisualizer';\r\nimport { VolumeAnalyzer } from './VolumeAnalyzer';\r\nimport { useAudioMonitor } from '../hooks/useAudioMonitor';\r\nimport { settingsManager } from '../utils/settingsManager';\r\nimport { alertManager } from '../utils/alertManager';\r\nimport { Settings } from '../types';\r\n\r\nconst Container = styled.div`\r\n  margin-left: 280px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst MainContent = styled.div`\r\n  padding: 20px;\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n`;\r\n\r\nexport const AudioTest: React.FC = () => {\r\n  const [settings, setSettings] = useState<Settings>({\r\n    textAlertEnabled: true,\r\n    soundAlertEnabled: true,\r\n    isCompact: false,\r\n    alertInterval: 1000,\r\n    threshold: -30,\r\n    lowVolumeDuration: 3000,\r\n    alertVolume: 0.5\r\n  });\r\n\r\n  const [currentLowVolumeDuration, setCurrentLowVolumeDuration] = useState(0);\r\n\r\n  const { volume, error, startMonitoring } = useAudioMonitor({\r\n    threshold: settings.threshold,\r\n    lowVolumeDuration: settings.lowVolumeDuration,\r\n    onVolumeLow: useCallback(() => {\r\n      alertManager.trigger('low-volume');\r\n    }, []),\r\n    onLowVolumeDurationUpdate: useCallback((duration: number) => {\r\n      setCurrentLowVolumeDuration(duration);\r\n    }, [])\r\n  });\r\n\r\n  const handleSettingsChange = useCallback((newSettings: Partial<Settings>) => {\r\n    console.log('Settings changing to:', newSettings);\r\n    \r\n    setSettings(prevSettings => {\r\n      const updatedSettings = { ...prevSettings, ...newSettings };\r\n      \r\n      alertManager.updateConfig({\r\n        textAlerts: updatedSettings.textAlertEnabled,\r\n        soundAlerts: updatedSettings.soundAlertEnabled,\r\n        threshold: updatedSettings.threshold,\r\n        alertInterval: updatedSettings.alertInterval,\r\n        lowVolumeDuration: updatedSettings.lowVolumeDuration,\r\n        alertVolume: updatedSettings.alertVolume\r\n      });\r\n      \r\n      return updatedSettings;\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    startMonitoring();\r\n  }, [startMonitoring]);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <MainContent>\r\n          <VolumeVisualizer\r\n            volume={volume}\r\n            threshold={settings.threshold}\r\n            isCompact={settings.isCompact}\r\n          />\r\n          \r\n          <VolumeAnalyzer\r\n            volume={volume}\r\n            threshold={settings.threshold}\r\n            lowVolumeDuration={settings.lowVolumeDuration}\r\n            currentLowVolumeDuration={currentLowVolumeDuration}\r\n          />\r\n        </MainContent>\r\n      </Container>\r\n      \r\n      <SettingsPanel\r\n        settings={{\r\n          threshold: settings.threshold,\r\n          lowVolumeDuration: settings.lowVolumeDuration,\r\n          soundAlertEnabled: settings.soundAlertEnabled,\r\n          alertVolume: settings.alertVolume\r\n        }}\r\n        onSettingsChange={handleSettingsChange}\r\n      />\r\n    </>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}