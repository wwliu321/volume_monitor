{"ast":null,"code":"class AlertManager {\n  constructor() {\n    this.audioContext = null;\n    this.oscillator = null;\n    this.gainNode = null;\n    this.settings = {\n      soundAlerts: true,\n      textAlerts: true,\n      alertVolume: 0.5,\n      threshold: 30,\n      lowVolumeDuration: 3000,\n      alertInterval: 1000\n    };\n  }\n  async initAudio() {\n    if (!this.audioContext) {\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    }\n    if (!this.oscillator) {\n      this.oscillator = this.audioContext.createOscillator();\n      this.oscillator.type = 'sine';\n      this.oscillator.frequency.setValueAtTime(440, this.audioContext.currentTime);\n      this.gainNode = this.audioContext.createGain();\n      this.gainNode.gain.setValueAtTime(0, this.audioContext.currentTime);\n      this.oscillator.connect(this.gainNode);\n      this.gainNode.connect(this.audioContext.destination);\n      this.oscillator.start();\n    }\n    if (this.audioContext.state === 'suspended') {\n      await this.audioContext.resume();\n    }\n  }\n  async playSound() {\n    console.log('Attempting to play sound:', {\n      soundAlerts: this.settings.soundAlerts,\n      volume: this.settings.alertVolume\n    });\n    if (!this.settings.soundAlerts) {\n      console.log('Sound alerts disabled, skipping playback');\n      return;\n    }\n    try {\n      await this.initAudio();\n      if (this.gainNode && this.audioContext) {\n        const now = this.audioContext.currentTime;\n        const volume = this.settings.alertVolume;\n        if (this.audioContext.state === 'suspended') {\n          await this.audioContext.resume();\n        }\n        this.gainNode.gain.cancelScheduledValues(now);\n        this.gainNode.gain.setValueAtTime(0, now);\n        this.gainNode.gain.linearRampToValueAtTime(volume, now + 0.05);\n        this.gainNode.gain.linearRampToValueAtTime(0, now + 0.5);\n        console.log('Sound played successfully with volume:', volume);\n      }\n    } catch (error) {\n      console.error('Failed to play alert sound:', error);\n    }\n  }\n  trigger(type) {\n    console.log('Alert triggered:', {\n      type,\n      settings: this.settings,\n      currentTime: Date.now()\n    });\n    if (type === 'low-volume' && this.settings.soundAlerts) {\n      this.playSound().catch(console.error);\n    }\n  }\n  updateConfig(newConfig) {\n    this.settings = {\n      ...this.settings,\n      ...newConfig\n    };\n    console.log('Alert manager settings updated:', this.settings);\n  }\n  getSettings() {\n    return {\n      ...this.settings\n    };\n  }\n  cleanup() {\n    if (this.oscillator) {\n      this.oscillator.stop();\n      this.oscillator.disconnect();\n    }\n    if (this.gainNode) {\n      this.gainNode.disconnect();\n    }\n    if (this.audioContext) {\n      this.audioContext.close();\n    }\n    this.oscillator = null;\n    this.gainNode = null;\n    this.audioContext = null;\n  }\n  dispose() {\n    this.cleanup();\n  }\n}\nexport const alertManager = new AlertManager();","map":{"version":3,"names":["AlertManager","constructor","audioContext","oscillator","gainNode","settings","soundAlerts","textAlerts","alertVolume","threshold","lowVolumeDuration","alertInterval","initAudio","window","AudioContext","webkitAudioContext","createOscillator","type","frequency","setValueAtTime","currentTime","createGain","gain","connect","destination","start","state","resume","playSound","console","log","volume","now","cancelScheduledValues","linearRampToValueAtTime","error","trigger","Date","catch","updateConfig","newConfig","getSettings","cleanup","stop","disconnect","close","dispose","alertManager"],"sources":["D:/projects/volume-monitor/src/utils/alertManager.ts"],"sourcesContent":["import { Settings } from '../types';\r\n\r\ninterface AlertSettings {\r\n  soundAlerts: boolean;\r\n  textAlerts: boolean;\r\n  alertVolume: number;\r\n  threshold: number;\r\n  lowVolumeDuration: number;\r\n  alertInterval: number;\r\n}\r\n\r\nclass AlertManager {\r\n  private audioContext: AudioContext | null = null;\r\n  private oscillator: OscillatorNode | null = null;\r\n  private gainNode: GainNode | null = null;\r\n  private settings: AlertSettings = {\r\n    soundAlerts: true,\r\n    textAlerts: true,\r\n    alertVolume: 0.5,\r\n    threshold: 30,\r\n    lowVolumeDuration: 3000,\r\n    alertInterval: 1000\r\n  };\r\n\r\n  private async initAudio() {\r\n    if (!this.audioContext) {\r\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n    }\r\n\r\n    if (!this.oscillator) {\r\n      this.oscillator = this.audioContext.createOscillator();\r\n      this.oscillator.type = 'sine';\r\n      this.oscillator.frequency.setValueAtTime(440, this.audioContext.currentTime);\r\n      \r\n      this.gainNode = this.audioContext.createGain();\r\n      this.gainNode.gain.setValueAtTime(0, this.audioContext.currentTime);\r\n      \r\n      this.oscillator.connect(this.gainNode);\r\n      this.gainNode.connect(this.audioContext.destination);\r\n      \r\n      this.oscillator.start();\r\n    }\r\n\r\n    if (this.audioContext.state === 'suspended') {\r\n      await this.audioContext.resume();\r\n    }\r\n  }\r\n\r\n  private async playSound() {\r\n    console.log('Attempting to play sound:', {\r\n      soundAlerts: this.settings.soundAlerts,\r\n      volume: this.settings.alertVolume\r\n    });\r\n\r\n    if (!this.settings.soundAlerts) {\r\n      console.log('Sound alerts disabled, skipping playback');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await this.initAudio();\r\n      if (this.gainNode && this.audioContext) {\r\n        const now = this.audioContext.currentTime;\r\n        const volume = this.settings.alertVolume;\r\n        \r\n        if (this.audioContext.state === 'suspended') {\r\n          await this.audioContext.resume();\r\n        }\r\n        \r\n        this.gainNode.gain.cancelScheduledValues(now);\r\n        this.gainNode.gain.setValueAtTime(0, now);\r\n        this.gainNode.gain.linearRampToValueAtTime(volume, now + 0.05);\r\n        this.gainNode.gain.linearRampToValueAtTime(0, now + 0.5);\r\n\r\n        console.log('Sound played successfully with volume:', volume);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to play alert sound:', error);\r\n    }\r\n  }\r\n\r\n  public trigger(type: string) {\r\n    console.log('Alert triggered:', {\r\n      type,\r\n      settings: this.settings,\r\n      currentTime: Date.now()\r\n    });\r\n\r\n    if (type === 'low-volume' && this.settings.soundAlerts) {\r\n      this.playSound().catch(console.error);\r\n    }\r\n  }\r\n\r\n  updateConfig(newConfig: Partial<AlertSettings>) {\r\n    this.settings = {\r\n      ...this.settings,\r\n      ...newConfig\r\n    };\r\n    console.log('Alert manager settings updated:', this.settings);\r\n  }\r\n\r\n  getSettings(): AlertSettings {\r\n    return { ...this.settings };\r\n  }\r\n\r\n  private cleanup() {\r\n    if (this.oscillator) {\r\n      this.oscillator.stop();\r\n      this.oscillator.disconnect();\r\n    }\r\n    if (this.gainNode) {\r\n      this.gainNode.disconnect();\r\n    }\r\n    if (this.audioContext) {\r\n      this.audioContext.close();\r\n    }\r\n    this.oscillator = null;\r\n    this.gainNode = null;\r\n    this.audioContext = null;\r\n  }\r\n\r\n  dispose() {\r\n    this.cleanup();\r\n  }\r\n}\r\n\r\nexport const alertManager = new AlertManager(); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}