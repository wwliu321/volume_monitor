{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\volume-monitor\\\\src\\\\components\\\\AudioTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { SettingsPanel } from './SettingsPanel';\nimport { alertManager } from '../utils/alertManager';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AudioTest = () => {\n  _s();\n  const [settings, setSettings] = useState({\n    textAlertEnabled: true,\n    soundAlertEnabled: true,\n    threshold: -30,\n    // 默认阈值设为 -30dB\n    alertInterval: 1000,\n    lowVolumeDuration: 3000,\n    alertVolume: 0.5,\n    isCompact: false\n  });\n\n  // 处理设置变更\n  const handleSettingsChange = useCallback(newSettings => {\n    console.log('Settings changing to:', newSettings);\n    setSettings(prevSettings => {\n      const updatedSettings = {\n        ...prevSettings,\n        ...newSettings\n      };\n\n      // 更新 alertManager 配置\n      alertManager.updateConfig({\n        textAlerts: updatedSettings.textAlertEnabled,\n        soundAlerts: updatedSettings.soundAlertEnabled,\n        threshold: updatedSettings.threshold,\n        alertInterval: updatedSettings.alertInterval,\n        lowVolumeDuration: updatedSettings.lowVolumeDuration,\n        alertVolume: updatedSettings.alertVolume\n      });\n      return updatedSettings;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SettingsPanel, {\n      settings: {\n        threshold: settings.threshold,\n        lowVolumeDuration: settings.lowVolumeDuration,\n        textAlerts: settings.textAlertEnabled,\n        soundAlerts: settings.soundAlertEnabled,\n        alertVolume: settings.alertVolume\n      },\n      onSettingsChange: handleSettingsChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(AudioTest, \"gj9TlKXYAfbnNd9pMZV1TKYCRSc=\");\n_c = AudioTest;\nvar _c;\n$RefreshReg$(_c, \"AudioTest\");","map":{"version":3,"names":["React","useState","useCallback","SettingsPanel","alertManager","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioTest","_s","settings","setSettings","textAlertEnabled","soundAlertEnabled","threshold","alertInterval","lowVolumeDuration","alertVolume","isCompact","handleSettingsChange","newSettings","console","log","prevSettings","updatedSettings","updateConfig","textAlerts","soundAlerts","children","onSettingsChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/projects/volume-monitor/src/components/AudioTest.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Settings } from '../types';\r\nimport { SettingsPanel } from './SettingsPanel';\r\nimport { alertManager } from '../utils/alertManager';\r\n\r\nexport const AudioTest: React.FC = () => {\r\n  const [settings, setSettings] = useState<Settings>({\r\n    textAlertEnabled: true,\r\n    soundAlertEnabled: true,\r\n    threshold: -30,  // 默认阈值设为 -30dB\r\n    alertInterval: 1000,\r\n    lowVolumeDuration: 3000,\r\n    alertVolume: 0.5,\r\n    isCompact: false\r\n  });\r\n\r\n  // 处理设置变更\r\n  const handleSettingsChange = useCallback((newSettings: Partial<Settings>) => {\r\n    console.log('Settings changing to:', newSettings);\r\n    \r\n    setSettings(prevSettings => {\r\n      const updatedSettings = { ...prevSettings, ...newSettings };\r\n      \r\n      // 更新 alertManager 配置\r\n      alertManager.updateConfig({\r\n        textAlerts: updatedSettings.textAlertEnabled,\r\n        soundAlerts: updatedSettings.soundAlertEnabled,\r\n        threshold: updatedSettings.threshold,\r\n        alertInterval: updatedSettings.alertInterval,\r\n        lowVolumeDuration: updatedSettings.lowVolumeDuration,\r\n        alertVolume: updatedSettings.alertVolume\r\n      });\r\n      \r\n      return updatedSettings;\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SettingsPanel\r\n        settings={{\r\n          threshold: settings.threshold,\r\n          lowVolumeDuration: settings.lowVolumeDuration,\r\n          textAlerts: settings.textAlertEnabled,\r\n          soundAlerts: settings.soundAlertEnabled,\r\n          alertVolume: settings.alertVolume\r\n        }}\r\n        onSettingsChange={handleSettingsChange}\r\n      />\r\n      {/* 其他组件 */}\r\n    </>\r\n  );\r\n}; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAEpD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,YAAY,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,OAAO,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAW;IACjDY,gBAAgB,EAAE,IAAI;IACtBC,iBAAiB,EAAE,IAAI;IACvBC,SAAS,EAAE,CAAC,EAAE;IAAG;IACjBC,aAAa,EAAE,IAAI;IACnBC,iBAAiB,EAAE,IAAI;IACvBC,WAAW,EAAE,GAAG;IAChBC,SAAS,EAAE;EACb,CAAC,CAAC;;EAEF;EACA,MAAMC,oBAAoB,GAAGlB,WAAW,CAAEmB,WAA8B,IAAK;IAC3EC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,WAAW,CAAC;IAEjDT,WAAW,CAACY,YAAY,IAAI;MAC1B,MAAMC,eAAe,GAAG;QAAE,GAAGD,YAAY;QAAE,GAAGH;MAAY,CAAC;;MAE3D;MACAjB,YAAY,CAACsB,YAAY,CAAC;QACxBC,UAAU,EAAEF,eAAe,CAACZ,gBAAgB;QAC5Ce,WAAW,EAAEH,eAAe,CAACX,iBAAiB;QAC9CC,SAAS,EAAEU,eAAe,CAACV,SAAS;QACpCC,aAAa,EAAES,eAAe,CAACT,aAAa;QAC5CC,iBAAiB,EAAEQ,eAAe,CAACR,iBAAiB;QACpDC,WAAW,EAAEO,eAAe,CAACP;MAC/B,CAAC,CAAC;MAEF,OAAOO,eAAe;IACxB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEnB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,eACEvB,OAAA,CAACH,aAAa;MACZQ,QAAQ,EAAE;QACRI,SAAS,EAAEJ,QAAQ,CAACI,SAAS;QAC7BE,iBAAiB,EAAEN,QAAQ,CAACM,iBAAiB;QAC7CU,UAAU,EAAEhB,QAAQ,CAACE,gBAAgB;QACrCe,WAAW,EAAEjB,QAAQ,CAACG,iBAAiB;QACvCI,WAAW,EAAEP,QAAQ,CAACO;MACxB,CAAE;MACFY,gBAAgB,EAAEV;IAAqB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC;EAAC,gBAEF,CAAC;AAEP,CAAC;AAACxB,EAAA,CA/CWD,SAAmB;AAAA0B,EAAA,GAAnB1B,SAAmB;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}