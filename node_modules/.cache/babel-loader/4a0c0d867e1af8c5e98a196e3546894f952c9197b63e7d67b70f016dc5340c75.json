{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\volume-monitor\\\\src\\\\components\\\\AudioTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { SettingsPanel } from './SettingsPanel';\nimport { VolumeVisualizer } from './VolumeVisualizer';\nimport { VolumeAnalyzer } from './VolumeAnalyzer';\nimport { useAudioMonitor } from '../hooks/useAudioMonitor';\nimport { settingsManager } from '../utils/settingsManager';\nimport { alertManager } from '../utils/alertManager';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  margin-left: 280px;\n  padding: 20px;\n`;\n_c = Container;\nconst MainContent = styled.div`\n  padding: 20px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n`;\n_c2 = MainContent;\nconst VolumeDisplay = styled.div`\n  font-size: 48px;\n  font-weight: bold;\n  text-align: center;\n  color: #2196f3;\n  margin: 20px 0;\n`;\n_c3 = VolumeDisplay;\nconst StatusText = styled.div`\n  text-align: center;\n  color: #666;\n  margin-bottom: 20px;\n`;\n_c4 = StatusText;\nexport const AudioTest = () => {\n  _s();\n  const [settings, setSettings] = useState({\n    textAlerts: true,\n    soundAlerts: true,\n    threshold: 30,\n    alertInterval: 1000,\n    lowVolumeDuration: 3000,\n    alertVolume: 0.5,\n    compactMode: false\n  });\n  const [threshold, setThreshold] = useState(settings.threshold);\n  const [lowVolumeDuration, setLowVolumeDuration] = useState(settings.lowVolumeDuration);\n  const [currentLowVolumeDuration, setCurrentLowVolumeDuration] = useState(0);\n  const handleSettingsChange = useCallback(newSettings => {\n    const updatedSettings = {\n      ...settings,\n      ...newSettings\n    };\n    setSettings(updatedSettings);\n    settingsManager.updateSettings(updatedSettings);\n    if (newSettings.threshold !== undefined) {\n      setThreshold(newSettings.threshold);\n    }\n    if (newSettings.lowVolumeDuration !== undefined) {\n      setLowVolumeDuration(newSettings.lowVolumeDuration);\n    }\n    alertManager.updateConfig({\n      textAlerts: updatedSettings.textAlerts,\n      soundAlerts: updatedSettings.soundAlerts,\n      threshold: updatedSettings.threshold,\n      alertInterval: updatedSettings.alertInterval,\n      lowVolumeDuration: updatedSettings.lowVolumeDuration,\n      alertVolume: updatedSettings.alertVolume\n    });\n  }, [settings]);\n  const {\n    volume,\n    error,\n    startMonitoring\n  } = useAudioMonitor({\n    threshold,\n    lowVolumeDuration,\n    onVolumeLow: useCallback(() => {\n      alertManager.trigger('low-volume');\n    }, []),\n    onLowVolumeDurationUpdate: useCallback(duration => {\n      setCurrentLowVolumeDuration(duration);\n    }, [])\n  });\n  useEffect(() => {\n    startMonitoring();\n  }, [startMonitoring]);\n  const getVolumeStatus = volume => {\n    if (volume < threshold) {\n      return '音量过低';\n    } else if (volume < 50) {\n      return '音量正常';\n    } else if (volume < 80) {\n      return '音量适中';\n    } else {\n      return '音量较高';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(MainContent, {\n        children: [/*#__PURE__*/_jsxDEV(VolumeDisplay, {\n          children: [Math.round(volume), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatusText, {\n          children: getVolumeStatus(volume)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VolumeVisualizer, {\n          volume: volume,\n          threshold: threshold,\n          isCompact: settings.compactMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VolumeAnalyzer, {\n          volume: volume,\n          threshold: threshold,\n          lowVolumeDuration: lowVolumeDuration,\n          currentLowVolumeDuration: currentLowVolumeDuration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SettingsPanel, {\n      settings: {\n        threshold,\n        lowVolumeDuration,\n        textAlerts: settings.textAlerts,\n        soundAlerts: settings.soundAlerts,\n        alertVolume: settings.alertVolume\n      },\n      onSettingsChange: handleSettingsChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AudioTest, \"iCeXFwSgPNcrcGR6hJnCTyIh/LA=\", false, function () {\n  return [useAudioMonitor];\n});\n_c5 = AudioTest;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"MainContent\");\n$RefreshReg$(_c3, \"VolumeDisplay\");\n$RefreshReg$(_c4, \"StatusText\");\n$RefreshReg$(_c5, \"AudioTest\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","styled","SettingsPanel","VolumeVisualizer","VolumeAnalyzer","useAudioMonitor","settingsManager","alertManager","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","MainContent","_c2","VolumeDisplay","_c3","StatusText","_c4","AudioTest","_s","settings","setSettings","textAlerts","soundAlerts","threshold","alertInterval","lowVolumeDuration","alertVolume","compactMode","setThreshold","setLowVolumeDuration","currentLowVolumeDuration","setCurrentLowVolumeDuration","handleSettingsChange","newSettings","updatedSettings","updateSettings","undefined","updateConfig","volume","error","startMonitoring","onVolumeLow","trigger","onLowVolumeDurationUpdate","duration","getVolumeStatus","children","Math","round","fileName","_jsxFileName","lineNumber","columnNumber","isCompact","onSettingsChange","_c5","$RefreshReg$"],"sources":["D:/projects/volume-monitor/src/components/AudioTest.tsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { SettingsPanel } from './SettingsPanel';\r\nimport { VolumeVisualizer } from './VolumeVisualizer';\r\nimport { VolumeAnalyzer } from './VolumeAnalyzer';\r\nimport { useAudioMonitor } from '../hooks/useAudioMonitor';\r\nimport { settingsManager } from '../utils/settingsManager';\r\nimport { alertManager } from '../utils/alertManager';\r\n\r\nconst Container = styled.div`\r\n  margin-left: 280px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst MainContent = styled.div`\r\n  padding: 20px;\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n`;\r\n\r\nconst VolumeDisplay = styled.div`\r\n  font-size: 48px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  color: #2196f3;\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst StatusText = styled.div`\r\n  text-align: center;\r\n  color: #666;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\ninterface Settings {\r\n  textAlerts: boolean;\r\n  soundAlerts: boolean;\r\n  threshold: number;\r\n  alertInterval: number;\r\n  lowVolumeDuration: number;\r\n  alertVolume: number;\r\n  compactMode: boolean;\r\n}\r\n\r\nexport const AudioTest: React.FC = () => {\r\n  const [settings, setSettings] = useState<Settings>({\r\n    textAlerts: true,\r\n    soundAlerts: true,\r\n    threshold: 30,\r\n    alertInterval: 1000,\r\n    lowVolumeDuration: 3000,\r\n    alertVolume: 0.5,\r\n    compactMode: false\r\n  });\r\n  const [threshold, setThreshold] = useState(settings.threshold);\r\n  const [lowVolumeDuration, setLowVolumeDuration] = useState(settings.lowVolumeDuration);\r\n  const [currentLowVolumeDuration, setCurrentLowVolumeDuration] = useState(0);\r\n\r\n  const handleSettingsChange = useCallback((newSettings: Partial<typeof settings>) => {\r\n    const updatedSettings = { ...settings, ...newSettings };\r\n    setSettings(updatedSettings);\r\n    settingsManager.updateSettings(updatedSettings);\r\n\r\n    if (newSettings.threshold !== undefined) {\r\n      setThreshold(newSettings.threshold);\r\n    }\r\n    if (newSettings.lowVolumeDuration !== undefined) {\r\n      setLowVolumeDuration(newSettings.lowVolumeDuration);\r\n    }\r\n\r\n    alertManager.updateConfig({\r\n      textAlerts: updatedSettings.textAlerts,\r\n      soundAlerts: updatedSettings.soundAlerts,\r\n      threshold: updatedSettings.threshold,\r\n      alertInterval: updatedSettings.alertInterval,\r\n      lowVolumeDuration: updatedSettings.lowVolumeDuration,\r\n      alertVolume: updatedSettings.alertVolume\r\n    });\r\n  }, [settings]);\r\n\r\n  const { volume, error, startMonitoring } = useAudioMonitor({\r\n    threshold,\r\n    lowVolumeDuration,\r\n    onVolumeLow: useCallback(() => {\r\n      alertManager.trigger('low-volume');\r\n    }, []),\r\n    onLowVolumeDurationUpdate: useCallback((duration: number) => {\r\n      setCurrentLowVolumeDuration(duration);\r\n    }, [])\r\n  });\r\n\r\n  useEffect(() => {\r\n    startMonitoring();\r\n  }, [startMonitoring]);\r\n\r\n  const getVolumeStatus = (volume: number) => {\r\n    if (volume < threshold) {\r\n      return '音量过低';\r\n    } else if (volume < 50) {\r\n      return '音量正常';\r\n    } else if (volume < 80) {\r\n      return '音量适中';\r\n    } else {\r\n      return '音量较高';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <MainContent>\r\n          <VolumeDisplay>\r\n            {Math.round(volume)}%\r\n          </VolumeDisplay>\r\n          \r\n          <StatusText>\r\n            {getVolumeStatus(volume)}\r\n          </StatusText>\r\n\r\n          <VolumeVisualizer\r\n            volume={volume}\r\n            threshold={threshold}\r\n            isCompact={settings.compactMode}\r\n          />\r\n          \r\n          <VolumeAnalyzer\r\n            volume={volume}\r\n            threshold={threshold}\r\n            lowVolumeDuration={lowVolumeDuration}\r\n            currentLowVolumeDuration={currentLowVolumeDuration}\r\n          />\r\n        </MainContent>\r\n      </Container>\r\n      \r\n      <SettingsPanel\r\n        settings={{\r\n          threshold,\r\n          lowVolumeDuration,\r\n          textAlerts: settings.textAlerts,\r\n          soundAlerts: settings.soundAlerts,\r\n          alertVolume: settings.alertVolume\r\n        }}\r\n        onSettingsChange={handleSettingsChange}\r\n      />\r\n    </>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}