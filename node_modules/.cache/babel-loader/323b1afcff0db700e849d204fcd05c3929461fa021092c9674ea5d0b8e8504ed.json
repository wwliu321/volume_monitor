{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\volume-monitor\\\\src\\\\components\\\\VolumeVisualizer.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  background: #f5f5f5;\n  border-radius: ${props => props.isCompact ? '4px' : '8px'};\n  padding: ${props => props.isCompact ? '10px' : '20px'};\n  margin-bottom: 20px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n`;\n_c = Container;\nconst ProgressBar = styled.div`\n  height: 20px;\n  background: ${props => {\n  if (props.warning) {\n    return '#ff9800';\n  }\n  return props.percentage < props.threshold ? '#f44336' : '#4caf50';\n}};\n  width: ${props => props.percentage}%;\n  transition: all 0.3s ease;\n  border-radius: 4px;\n  position: relative;\n`;\n_c2 = ProgressBar;\nconst ProgressContainer = styled.div`\n  width: 100%;\n  height: 20px;\n  background: #e0e0e0;\n  border-radius: 4px;\n  overflow: hidden;\n  position: relative;\n`;\n_c3 = ProgressContainer;\nconst ThresholdMarker = styled.div`\n  position: absolute;\n  left: ${props => props.position}%;\n  top: 0;\n  bottom: 0;\n  width: 2px;\n  background: rgba(0,0,0,0.3);\n  z-index: 1;\n`;\n_c4 = ThresholdMarker;\nconst Labels = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 8px;\n  font-size: 12px;\n  color: #666;\n`;\n_c5 = Labels;\nexport const VolumeVisualizer = ({\n  volume,\n  threshold,\n  isCompact = false\n}) => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    isCompact: isCompact,\n    children: [/*#__PURE__*/_jsxDEV(ProgressContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ThresholdMarker, {\n        position: threshold\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        percentage: volume,\n        threshold: threshold,\n        warning: volume < threshold\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Labels, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"0%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [threshold, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_c6 = VolumeVisualizer;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ProgressBar\");\n$RefreshReg$(_c3, \"ProgressContainer\");\n$RefreshReg$(_c4, \"ThresholdMarker\");\n$RefreshReg$(_c5, \"Labels\");\n$RefreshReg$(_c6, \"VolumeVisualizer\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","Container","div","props","isCompact","_c","ProgressBar","warning","percentage","threshold","_c2","ProgressContainer","_c3","ThresholdMarker","position","_c4","Labels","_c5","VolumeVisualizer","volume","children","fileName","_jsxFileName","lineNumber","columnNumber","_c6","$RefreshReg$"],"sources":["D:/projects/volume-monitor/src/components/VolumeVisualizer.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport type { VolumeVisualizerProps } from '../types';\r\n\r\nconst Container = styled.div<{ isCompact?: boolean }>`\r\n  background: #f5f5f5;\r\n  border-radius: ${props => props.isCompact ? '4px' : '8px'};\r\n  padding: ${props => props.isCompact ? '10px' : '20px'};\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n`;\r\n\r\nconst ProgressBar = styled.div<{ \r\n  percentage: number; \r\n  threshold: number;\r\n  warning?: boolean;\r\n}>`\r\n  height: 20px;\r\n  background: ${props => {\r\n    if (props.warning) {\r\n      return '#ff9800';\r\n    }\r\n    return props.percentage < props.threshold ? '#f44336' : '#4caf50';\r\n  }};\r\n  width: ${props => props.percentage}%;\r\n  transition: all 0.3s ease;\r\n  border-radius: 4px;\r\n  position: relative;\r\n`;\r\n\r\nconst ProgressContainer = styled.div`\r\n  width: 100%;\r\n  height: 20px;\r\n  background: #e0e0e0;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  position: relative;\r\n`;\r\n\r\nconst ThresholdMarker = styled.div<{ position: number }>`\r\n  position: absolute;\r\n  left: ${props => props.position}%;\r\n  top: 0;\r\n  bottom: 0;\r\n  width: 2px;\r\n  background: rgba(0,0,0,0.3);\r\n  z-index: 1;\r\n`;\r\n\r\nconst Labels = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 8px;\r\n  font-size: 12px;\r\n  color: #666;\r\n`;\r\n\r\nexport const VolumeVisualizer: React.FC<VolumeVisualizerProps> = ({\r\n  volume,\r\n  threshold,\r\n  isCompact = false\r\n}) => {\r\n  return (\r\n    <Container isCompact={isCompact}>\r\n      <ProgressContainer>\r\n        <ThresholdMarker position={threshold} />\r\n        <ProgressBar \r\n          percentage={volume} \r\n          threshold={threshold}\r\n          warning={volume < threshold}\r\n        />\r\n      </ProgressContainer>\r\n      <Labels>\r\n        <span>0%</span>\r\n        <span>{threshold}%</span>\r\n        <span>100%</span>\r\n      </Labels>\r\n    </Container>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}