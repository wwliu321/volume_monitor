{"ast":null,"code":"class AlertSound {\n  constructor() {\n    this.audioContext = null;\n  }\n  getAudioContext() {\n    if (!this.audioContext) {\n      this.audioContext = new AudioContext();\n    }\n    return this.audioContext;\n  }\n  playAlert(frequency, duration = 200) {\n    const ctx = this.getAudioContext();\n    const oscillator = ctx.createOscillator();\n    const gainNode = ctx.createGain();\n    oscillator.type = 'sine';\n    oscillator.frequency.value = frequency;\n    gainNode.gain.value = 0.1;\n    gainNode.gain.linearRampToValueAtTime(0, ctx.currentTime + duration / 1000);\n    oscillator.connect(gainNode);\n    gainNode.connect(ctx.destination);\n    oscillator.start();\n    oscillator.stop(ctx.currentTime + duration / 1000);\n  }\n}\nexport const alertSound = new AlertSound();","map":{"version":3,"names":["AlertSound","constructor","audioContext","getAudioContext","AudioContext","playAlert","frequency","duration","ctx","oscillator","createOscillator","gainNode","createGain","type","value","gain","linearRampToValueAtTime","currentTime","connect","destination","start","stop","alertSound"],"sources":["D:/projects/volume-monitor/src/utils/alertSound.ts"],"sourcesContent":["class AlertSound {\r\n  private audioContext: AudioContext | null = null;\r\n\r\n  private getAudioContext(): AudioContext {\r\n    if (!this.audioContext) {\r\n      this.audioContext = new AudioContext();\r\n    }\r\n    return this.audioContext;\r\n  }\r\n\r\n  public playAlert(frequency: number, duration: number = 200): void {\r\n    const ctx = this.getAudioContext();\r\n    const oscillator = ctx.createOscillator();\r\n    const gainNode = ctx.createGain();\r\n\r\n    oscillator.type = 'sine';\r\n    oscillator.frequency.value = frequency;\r\n    \r\n    gainNode.gain.value = 0.1;\r\n    gainNode.gain.linearRampToValueAtTime(0, ctx.currentTime + duration / 1000);\r\n\r\n    oscillator.connect(gainNode);\r\n    gainNode.connect(ctx.destination);\r\n\r\n    oscillator.start();\r\n    oscillator.stop(ctx.currentTime + duration / 1000);\r\n  }\r\n}\r\n\r\nexport const alertSound = new AlertSound(); "],"mappings":"AAAA,MAAMA,UAAU,CAAC;EAAAC,YAAA;IAAA,KACPC,YAAY,GAAwB,IAAI;EAAA;EAExCC,eAAeA,CAAA,EAAiB;IACtC,IAAI,CAAC,IAAI,CAACD,YAAY,EAAE;MACtB,IAAI,CAACA,YAAY,GAAG,IAAIE,YAAY,CAAC,CAAC;IACxC;IACA,OAAO,IAAI,CAACF,YAAY;EAC1B;EAEOG,SAASA,CAACC,SAAiB,EAAEC,QAAgB,GAAG,GAAG,EAAQ;IAChE,MAAMC,GAAG,GAAG,IAAI,CAACL,eAAe,CAAC,CAAC;IAClC,MAAMM,UAAU,GAAGD,GAAG,CAACE,gBAAgB,CAAC,CAAC;IACzC,MAAMC,QAAQ,GAAGH,GAAG,CAACI,UAAU,CAAC,CAAC;IAEjCH,UAAU,CAACI,IAAI,GAAG,MAAM;IACxBJ,UAAU,CAACH,SAAS,CAACQ,KAAK,GAAGR,SAAS;IAEtCK,QAAQ,CAACI,IAAI,CAACD,KAAK,GAAG,GAAG;IACzBH,QAAQ,CAACI,IAAI,CAACC,uBAAuB,CAAC,CAAC,EAAER,GAAG,CAACS,WAAW,GAAGV,QAAQ,GAAG,IAAI,CAAC;IAE3EE,UAAU,CAACS,OAAO,CAACP,QAAQ,CAAC;IAC5BA,QAAQ,CAACO,OAAO,CAACV,GAAG,CAACW,WAAW,CAAC;IAEjCV,UAAU,CAACW,KAAK,CAAC,CAAC;IAClBX,UAAU,CAACY,IAAI,CAACb,GAAG,CAACS,WAAW,GAAGV,QAAQ,GAAG,IAAI,CAAC;EACpD;AACF;AAEA,OAAO,MAAMe,UAAU,GAAG,IAAItB,UAAU,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}